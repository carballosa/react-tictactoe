{"version":3,"sources":["index.js"],"names":["Square","_ref","value","onClick","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","Board","_ref2","squares","map","j","key","i","Game","state","history","Array","fill","nextPlayer","winner","stepNumber","status","backTo","step","_this","setState","handleClick","slice","length","player","lines","_lines$i","Object","C_WIP_dev_react_tictactoe_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_5__","b","c","calculateWinner","concat","_this2","this","current","move","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f8b2528.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square({value, onClick}) {\r\n  return (\r\n    <button className=\"square\" onClick={onClick} >{value}</button>\r\n  );\r\n}\r\n\r\nfunction Board({squares, onClick}) {\r\n  return (\r\n    <div>\r\n      {[0,1,2].map(j =>\r\n        <div className=\"board-row\" key={j}>\r\n          {[0,1,2].map(i =>\r\n            <Square key={i}\r\n              value={squares[i+3*j]}\r\n              onClick={onClick(i+3*j)}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6],\r\n    [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\nclass Game extends React.Component {\r\n  state = {\r\n    history: [{\r\n      squares: Array(9).fill(null),\r\n    }],\r\n    nextPlayer: 'X',\r\n    winner: null,\r\n    stepNumber: 0,\r\n  }\r\n  status = `Next player: X`;\r\n  backTo = (step) => {\r\n    this.setState({\r\n      nextPlayer: (step % 2) ? 'O' : 'X',\r\n      winner: null,\r\n      stepNumber: step,\r\n    });\r\n  };\r\n  handleClick = (i) => () => {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    let squares = current.squares;\r\n    if (this.state.winner || squares[i]) return;\r\n    squares = squares.slice(); // clone\r\n    const player = this.state.nextPlayer;\r\n    squares[i] = player;\r\n    const winner = calculateWinner(squares);\r\n    const nextPlayer = (player  === 'X') ? 'O' : 'X';\r\n    this.status = winner ? `Winner: ${winner}` : `Next player: ${nextPlayer}`;\r\n    this.setState({\r\n      history: history.concat([{ squares }]),\r\n      nextPlayer,\r\n      winner,\r\n      stepNumber: history.length,\r\n    });\r\n  };\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[history.length-1];\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board squares={current.squares} onClick={this.handleClick} />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{this.status}</div>\r\n          <ol>\r\n            {history.map((step, move) =>\r\n              <li key={move}>\r\n                <button onClick={() => this.backTo(move)} >\r\n                  {`go back to ${(!move)?'start':'step '+move}`}\r\n                </button>\r\n              </li>\r\n            )}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}